{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.5.6.12127",
      "templateHash": "9757716447428663995"
    }
  },
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for the resources"
      }
    },
    "disablePublicIp": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Specifies whether to deploy Azure Databricks workspace with Secure Cluster Connectivity (No Public IP) enabled or not"
      }
    },
    "workspaceName": {
      "type": "string",
      "defaultValue": "adb-essentials-ws",
      "metadata": {
        "description": "The name of the Azure Databricks workspace to create."
      }
    },
    "pricingTier": {
      "type": "string",
      "defaultValue": "premium",
      "allowedValues": [
        "standard",
        "premium"
      ],
      "metadata": {
        "description": "The pricing tier of workspace."
      }
    },
    "storageAccountName": {
      "type": "string",
      "defaultValue": "adbessentialsstorage",
      "metadata": {
        "description": "Specifies the name of the Azure Storage account."
      }
    },
    "containerName": {
      "type": "string",
      "defaultValue": "adb-demos",
      "metadata": {
        "description": "Specifies the name of the blob container."
      }
    }
  },
  "variables": {
    "managedResourceGroupName": "[format('databricks-rg-{0}-{1}', parameters('workspaceName'), uniqueString(parameters('workspaceName'), resourceGroup().id))]",
    "identityName": "adbessentialsid",
    "endpoint": "[format('https://{0}.blob.{1}', parameters('storageAccountName'), environment().suffixes.storage)]",
    "containerEndpoint": "[format('https://{0}.blob.{1}/{2}', parameters('storageAccountName'), environment().suffixes.storage, parameters('containerName'))]",
    "containerURL": "[format('wasbs://{0}@{1}.blob.core.windows.net/', parameters('containerName'), parameters('storageAccountName'))]"
  },
  "resources": [
    {
      "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
      "apiVersion": "2018-11-30",
      "name": "[variables('identityName')]",
      "location": "[parameters('location')]"
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2021-06-01",
      "name": "[parameters('storageAccountName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "StorageV2",
      "properties": {
        "accessTier": "Cool"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2021-06-01",
      "name": "[format('{0}/default/{1}', parameters('storageAccountName'), parameters('containerName'))]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.Databricks/workspaces",
      "apiVersion": "2021-04-01-preview",
      "name": "[parameters('workspaceName')]",
      "location": "[parameters('location')]",
      "tags": {
        "usage": "adb-essentials-demo"
      },
      "sku": {
        "name": "[parameters('pricingTier')]"
      },
      "properties": {
        "managedResourceGroupId": "[subscriptionResourceId('Microsoft.Resources/resourceGroups', variables('managedResourceGroupName'))]",
        "parameters": {
          "enableNoPublicIp": {
            "value": "[parameters('disablePublicIp')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deploymentScripts",
      "apiVersion": "2020-10-01",
      "name": "runPowerShellInline",
      "location": "[parameters('location')]",
      "kind": "AzurePowerShell",
      "identity": {
        "type": "UserAssigned",
        "userAssignedIdentities": {
          "[format('{0}', resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('identityName')))]": {}
        }
      },
      "properties": {
        "forceUpdateTag": "1",
        "azPowerShellVersion": "6.4",
        "environmentVariables": [
          {
            "name": "ADB_WORKSPACE_URL",
            "value": "[reference(resourceId('Microsoft.Databricks/workspaces', parameters('workspaceName'))).workspaceUrl]"
          },
          {
            "name": "ADB_SECRET_SCOPE_NAME",
            "value": "essentials_secret_scope"
          },
          {
            "name": "SAS_ACCESS_KEY",
            "value": "[listServiceSAS(parameters('storageAccountName'), '2021-04-01', createObject('canonicalizedResource', format('/blob/{0}/{1}', parameters('storageAccountName'), parameters('containerName')), 'signedResource', 'c', 'signedProtocol', 'https', 'signedPermission', 'rwl', 'signedServices', 'b', 'signedExpiry', '2026-07-01T00:00:00Z')).serviceSasToken]"
          },
          {
            "name": "STORAGE_ACCESS_KEY",
            "value": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2021-06-01').keys[0].value]"
          }
        ],
        "scriptContent": "set PATH \"%PATH%;C:\\Python33\\Scripts\"\npip install databricks\n$databricks_aad_token = az account get-access-token --resource 2ff814a6-3304-4ab8-85cb-cd0e6f879c1d | jq .accessToken -r\n$Env:DATABRICKS_AAD_TOKEN = $databricks_aad_token         \ndatabricks configure --aad-token --host ${Env:ADB_WORKSPACE_URL}\ndatabricks secrets create-scope --scope ${Env:ADB_SECRET_SCOPE_NAME}\ndatabricks secrets put --scope access_creds --key sasKey --string-value ${Env:SAS_ACCESS_KEY}\ndatabricks secrets put --scope access_creds --key storageKey --string-value ${Env:STORAGE_ACCESS_KEY}\n    ",
        "supportingScriptUris": [],
        "timeout": "PT30M",
        "cleanupPreference": "OnSuccess",
        "retentionInterval": "P1D"
      },
      "dependsOn": [
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('identityName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]",
        "[resourceId('Microsoft.Databricks/workspaces', parameters('workspaceName'))]"
      ]
    }
  ],
  "outputs": {
    "blobEndpoint": {
      "type": "string",
      "value": "[variables('endpoint')]"
    },
    "myContainerBlobEndpoint": {
      "type": "string",
      "value": "[variables('containerEndpoint')]"
    },
    "wasbsURL": {
      "type": "string",
      "value": "[variables('containerURL')]"
    },
    "containerSASConnectionStr": {
      "type": "string",
      "value": "[listServiceSAS(parameters('storageAccountName'), '2021-04-01', createObject('canonicalizedResource', format('/blob/{0}/{1}', parameters('storageAccountName'), parameters('containerName')), 'signedResource', 'c', 'signedProtocol', 'https', 'signedPermission', 'rwl', 'signedServices', 'b', 'signedExpiry', '2026-07-01T00:00:00Z')).serviceSasToken]"
    },
    "blobAccountAccessKey": {
      "type": "string",
      "value": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2021-06-01').keys[0].value]"
    }
  }
}