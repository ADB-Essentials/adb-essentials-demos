{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.5.6.12127",
      "templateHash": "2234606122472978887"
    }
  },
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for the resources"
      }
    },
    "disablePublicIp": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Specifies whether to deploy Azure Databricks workspace with Secure Cluster Connectivity (No Public IP) enabled or not"
      }
    },
    "workspaceName": {
      "type": "string",
      "defaultValue": "adb-essentials-ws",
      "metadata": {
        "description": "The name of the Azure Databricks workspace to create."
      }
    },
    "pricingTier": {
      "type": "string",
      "defaultValue": "premium",
      "allowedValues": [
        "standard",
        "premium"
      ],
      "metadata": {
        "description": "The pricing tier of workspace."
      }
    },
    "storageAccountName": {
      "type": "string",
      "defaultValue": "adb-essentials-sa",
      "metadata": {
        "description": "Specifies the name of the Azure Storage account."
      }
    },
    "containerName": {
      "type": "string",
      "defaultValue": "adb-demos",
      "metadata": {
        "description": "Specifies the name of the blob container."
      }
    }
  },
  "variables": {
    "managedResourceGroupName": "[format('databricks-rg-{0}-{1}', parameters('workspaceName'), uniqueString(parameters('workspaceName'), resourceGroup().id))]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2021-06-01",
      "name": "[parameters('storageAccountName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "StorageV2",
      "properties": {
        "accessTier": "Cool"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2021-06-01",
      "name": "[format('{0}/default/{1}', parameters('storageAccountName'), parameters('containerName'))]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.Databricks/workspaces",
      "apiVersion": "2021-04-01-preview",
      "name": "[parameters('workspaceName')]",
      "location": "[parameters('location')]",
      "tags": {
        "usage": "adb-essentials-demo"
      },
      "sku": {
        "name": "[parameters('pricingTier')]"
      },
      "properties": {
        "managedResourceGroupId": "[subscriptionResourceId('Microsoft.Resources/resourceGroups', variables('managedResourceGroupName'))]",
        "parameters": {
          "enableNoPublicIp": {
            "value": "[parameters('disablePublicIp')]"
          }
        }
      }
    }
  ],
  "outputs": {
    "blobEndpoint": {
      "type": "string",
      "value": "[format('https://satestapppreprod.blob.{0}', environment().suffixes.storage)]"
    },
    "myContainerBlobEndpoint": {
      "type": "string",
      "value": "[format('https://satestapppreprod.blob.{0}/{1}', environment().suffixes.storage, parameters('containerName'))]"
    },
    "allBlobDownloadSAS": {
      "type": "string",
      "value": "[listAccountSAS(parameters('storageAccountName'), '2021-04-01', createObject('signedProtocol', 'https', 'signedResourceTypes', 'sco', 'signedPermission', 'rl', 'signedServices', 'b', 'signedExpiry', '2026-07-01T00:00:00Z')).accountSasToken]"
    },
    "myContainerUploadSAS": {
      "type": "string",
      "value": "[listServiceSAS(parameters('storageAccountName'), '2021-04-01', createObject('canonicalizedResource', format('/blob/{0}/{1}', parameters('storageAccountName'), parameters('containerName')), 'signedResource', 'c', 'signedProtocol', 'https', 'signedPermission', 'rwl', 'signedServices', 'b', 'signedExpiry', '2026-07-01T00:00:00Z')).serviceSasToken]"
    }
  }
}